global:
  host: ${HOST}
  dynamic:
    includes:
      - dynamic-plugins.default.yaml
    plugins:
      - package: ./dynamic-plugins/dist/backstage-plugin-catalog-backend-module-github-dynamic
        disabled: true
      - package: ./dynamic-plugins/dist/backstage-plugin-kubernetes
        disabled: true        
      - package: ./dynamic-plugins/dist/backstage-plugin-kubernetes-backend-dynamic
        disabled: true  
      - package: ./dynamic-plugins/dist/janus-idp-backstage-plugin-rbac
        disabled: false
      - package: ./dynamic-plugins/dist/janus-idp-backstage-plugin-topology
        disabled: false
      - package: ./dynamic-plugins/dist/backstage-plugin-techdocs-backend-dynamic
        disabled: false 
      - package: ./dynamic-plugins/dist/backstage-plugin-catalog-backend-module-msgraph-dynamic
        disabled: false
      - package: ./dynamic-plugins/dist/backstage-plugin-catalog-backend-module-github-dynamic
        disabled: true  
      - disabled: false
        package: ./dynamic-plugins/dist/backstage-plugin-catalog-backend-module-github-org-dynamic    

          
                    
route:
  enabled: false
upstream:
  serviceAccount: 
    name: devhub-sa
    create: true
    annotations:
      iam.gke.io/gcp-service-account: ${GSA}
  postgresql:
    enabled: false    
  ingress:
    enabled: false
  backstage:      
    image:
      registry: quay.io #optional
      repository: rhdh/rhdh-hub-rhel9 #optional
      tag: "1.3" #optional
    appConfig:
      backend:
        https: 
          certificate:
            key: ${BACKSTAGE_SSL_KEY} # key in pem format 
            cert: ${BACKSTAGE_SSL_CERT} # cert in pem format 
        database:
          client: pg
          ensureExists: true
          pluginDivisionMode: 'schema'
          knexConfig:
            searchPath: ['knex', 'public']
          connection:
            host: '127.0.0.1'
            port: '5432'
            user: ${DB_USER}
            password: ${DB_PASSWORD}
          # prefix: devhub_plugin_
          plugin:
            permission:
              connection: 
                database: devhub_plugin_permission
            kubernetes:
              connection: 
                database: devhub_plugin_kubernetes                     
            scalprum:
              connection: 
                database: devhub_plugin_scalprum 
            licensed-users-info:
              connection: 
                database: devhub_plugin_licensed-users-info          
            techdocs:
              connection: 
                database: devhub_plugin_techdocs        
            events:
              connection: 
                database: devhub_plugin_events          
            search:
              connection: 
                database: devhub_plugin_search
            scaffolder:
              connection: 
                database: devhub_plugin_scaffolder
            proxy:
              connection: 
                database: devhub_plugin_proxy
            auth:
              connection: 
                database: devhub_plugin_auth
            catalog:
              connection:
                database: devhub_plugin_catalog
            app:
              connection: 
                database: devhub_plugin_auth
            dynamic-plugins-info: 
              connection: 
                database: devhub_plugin_dynamic-plugins-info       
    podSecurityContext:
      # you can assign any random value as fsGroup
      fsGroup: 2000    
    extraAppConfig:
      - configMapRef: app-config-rhdh
        filename: app-config-rhdh.yaml 
    extraEnvVarsSecrets:
      - rhdh-secret        
    extraEnvVars:
      - name: LOG_LEVEL
        value: debug
      - name: TZ
        value: "Australia/Melbourne"  
      # - name: POSTGRESQL_ADMIN_PASSWORD
      #   valueFrom:
      #     secretKeyRef:
      #       key: postgres-password
      #       name: rhdh-postgresql
    extraContainers:
      - name: cloud-sql-proxy
        image: gcr.io/cloud-sql-connectors/cloud-sql-proxy
        args:
          - "--structured-logs"
          - "--port=5432"
          - "--auto-iam-authn"
          - "${INSTANCE}"
        securityContext:
          runAsNonRoot: true
        resources:
          requests:
            memory: "2Gi"
            cpu:    "1"          
    livenessProbe:
      httpGet:
        scheme: HTTPS 
    readinessProbe:
      httpGet:
        scheme: HTTPS            
